<?xml version="1.0" encoding="UTF-8"?>
 <beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
 
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- 양방향 암호화 알고리즘인 AES256 를 사용하여 복호화 하기위한 클래스(파라미터가 있는 생성자) 의존객체 bean 생성하기 ===== -->    
    <beans:bean id="aes" class="masterpiece.exhibition.common.AES256"> 
    	<beans:constructor-arg> 
    		<beans:value>abcd0070#eclass$</beans:value> <!-- abcd0070#eclass$ 은 각자 masterpiece.exhibition.common.AES256 에 사용되어지는 암호화/복호화 키이다. -->
    	</beans:constructor-arg> 
    </beans:bean>

 <!-- <context:component-scan base-package="masterpiece.exhibition.*" name-generator="masterpiece.exhibition.common.FullBeanNameGenerator" /> -->
    <!--  다른 패키지에 있는 같은 이름의 클래스가 bean으로 등록될때, 충돌이 일어나지 않도록  패키지 이름 전체를 넣는다.
    
        spring annotation-driven 시 bean name 중복(충돌,conflicts)을 해결하기 위해서 사용하는 커스트마이징된 BeanNameGenerator 이다. 
   --> 

	<!-- === 파일다운로드 === bean을 아래처럼 등록해주세요. -->
	<!-- <beans:bean id="excelDownloadView" class="masterpiece.exhibition.??"/> -->
	<beans:bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <beans:property name="order" value="0"/> 
        <!--  order = 0이면 최우선 순위를 가진다!! 아래에 있는  InternalResourceViewResolver 보다 먼저 작동한다.-->
    </beans:bean>

	<!-- ======= 실행시 모든 페이지에 기본틀이 되어지는 틀을 배치하기 위한 템플릿 프레임워크인 TilesViewResolver 를 사용하기 위해 빈으로 등록한다. ======= -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <beans:property name="definitions">
            <beans:list>
                 <beans:value>/WEB-INF/tiles/tiles-layout.xml</beans:value>
            </beans:list><!--  뷰단 화면 배치를 위한 설정 파일은 위 경로의 tiles-layout.xml이다. -->
        </beans:property>
    </beans:bean>

	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
        <beans:property name="order" value="1"/>
    </beans:bean>
    <!-- ===> Resolver의 사용우선순위를 TilesViewResolver 를 1로 한다. 
	          <beans:property name="order" value="1"/> 을 주면 된다. 따라서 return 타입은 String-->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" /> 
		<!--  위의 BeanNameViewResolver 에서 해당하는 bean이 없으면 이후에 이 resolver가 실행된다. -->
	</beans:bean>
	
	<!-- jsonView -->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=UTF-8" />
	</beans:bean>

	<!-- ===== #20. 파일업로드 및 파일다운로드에 필요한 의존객체 설정하기 ===== -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
	<!-- 자바파일이 UTF-8로 저장된 경우 한글파일명이 깨지지 않게하기 위해 -->
        <beans:property name="defaultEncoding" value="utf-8" />
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 파일 크기 10mb로 지정 -->
	</beans:bean> 
	
	<context:component-scan base-package="masterpiece.exhibition.*" />
	
	  <!--  === AOP 관련 어노테이션 동작이 가능하도록 설정해주는 것. 추가한것 === -->	
	<aop:aspectj-autoproxy /> <!-- 추가 -->
	             
	<aop:config proxy-target-class="true">
	  <aop:pointcut id="controllerOperation" expression="execution(public * masterpiece.exhibition..*Controller.*(..))" />
    </aop:config>
	
</beans:beans>
