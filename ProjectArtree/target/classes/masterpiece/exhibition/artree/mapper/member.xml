<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member"> 
	
	<!-- 회원가입 -->
	<insert id="joinInsert" parameterType="masterpiece.exhibition.member.model.MemberVO"> 
      insert into member(idx, email, name, password, agegroup, gender, area, hp, status, registerday, lastLoginDate, lastPasswordDate, clientIP)
      values(seq_member.nextval, #{email}, #{name}, #{password}, #{agegroup}, #{gender}, #{area}, #{hp}, default, default, default, default, #{clientIP})
    </insert>
   
    <!-- 이메일 중복 체크 -->
    <select id="duplicateCheck" parameterType="String" resultType="String">
    	select email
    	from member
    	where email = #{email}
    </select>
    
    <!-- 로그인 처리 -->
    <select id="getLoginMember" parameterType="HashMap" resultType="masterpiece.exhibition.member.model.MemberVO">
      select idx, email, name, gender, agegroup, area, status, password
          , trunc( months_between(sysdate, lastLoginDate) ) AS lastlogindategap 
          , trunc( months_between(sysdate, lastPasswordDate) ) AS pwdchangegap 
      from member
      where (status = 1 or status = 2) and 
            email = #{email} and
            password = #{password}
    </select>
   
   <!-- member 테이블에 성별, 연령대, 지역 확정 insert -->
   <update id="infoUpdate" parameterType="HashMap">
   	  update member set gender = ${gender}, agegroup = ${agegroup}, area = '${area}' where idx = ${idx}
   </update>
   
   
   <!-- 받아온 exhibitionno, galleryno로 작품 태그, 장르 select -->
   <resultMap type="HashMap" id="favorMap">
	 	<result property="tag" 		column="tag" 	javaType="String"/>
	 	<result property="genre" 	column="genre" 	javaType="String"/>
   </resultMap>
   
   <select id="myFavorTagGenre" parameterType="HashMap" resultMap="favorMap">
   	  select genre, tag
   	  from exhibition
   	  where exhibitionno = #{exhibitionno1} or exhibitionno = #{exhibitionno2}
   </select>
   
   <!-- wishList 테이블에 선호작품 insert -->
   <insert id="favorInsert" parameterType="HashMap">
   	  insert all
   	  into wishList(wishNo, fk_idx, fk_galleryNo, fk_exhibitionNo, favorTag, favorGenre) 
   	  values(get_wishno, #{idx}, #{galleryno1}, #{exhibitionno1}, #{favorTag1}, #{favorGenre1})
   	  into wishList(wishNo, fk_idx, fk_galleryNo, fk_exhibitionNo, favorTag, favorGenre) 
   	  values(get_wishno, #{idx}, #{galleryno2}, #{exhibitionno2}, #{favorTag2}, #{favorGenre2})
   	  select *
	  from dual
   </insert>
   
   <!-- 작품 이름, 작가, 작품이미지 select -->
   <resultMap type="HashMap" id="favorDescMap">
	 	<result property="exhibitionname" 	column="exhibitionname" javaType="String"/>
	 	<result property="author" 			column="author" 		javaType="String"/>
	 	<result property="image1" 			column="image1" 		javaType="String"/>
	 	<result property="tag" 				column="tag" 			javaType="String"/>
	 	<result property="genre" 			column="genre" 			javaType="String"/>
   </resultMap>
   
   <!-- 사용중인 이메일 체크 -->
   <select id="myFavorDesc" parameterType="HashMap" resultMap="favorDescMap">
   	  select E.exhibitionname, E.author, E.genre, E.tag, D.image1
	  from exhibition E join exhibitiondetail D
	  on E.exhibitionno = D.fk_exhibitionno
	  where E.exhibitionno = #{exhibitionno1} or E.exhibitionno = #{exhibitionno2}
   </select>
   
   <!-- 이메일 찾기 -->
   <select id="idFind" parameterType="HashMap" resultType="String">
   	  select email
   	  from member
   	  where name=#{name} and hp=#{hp} and gender=#{gender} and agegroup=#{agegroup} and area=#{area}
   </select>
   
   <!-- 비밀번호 찾기 - 입력한 name, email, hp에 맞는 사용자가 있는지 확인 -->
   <select id="findUser" parameterType="HashMap" resultType="String">
   	  select email, name
   	  from member
   	  where name=#{name} and email=#{email} and hp=#{hp}
   </select>
   
   <!-- 임시 비밀번호로 현재 비밀번호 변경 -->
   <update id="updatePwd" parameterType="HashMap">
   	  update member set password=#{tempPassword} where email=#{email}
   </update>
   
   <!-- chart 개인 선호 장르 select -->
   <select id="myfavorGenre" parameterType="String" resultType="String">
   	  select favorgenre
	  from (select * 
	  		from member 
        	where idx= #{idx}) M join wishlist W
	  on M.idx = W.fk_idx
   </select>
   <!-- 선호 장르 차트 data -->
    <resultMap type="HashMap" id="genreMap">
	 	<result property="genre" 	column="genre" 	javaType="String"/>
	 	<result property="cnt" 		column="cnt" 	javaType="String"/>
   </resultMap>
   <select id="myGenreData" parameterType="String" resultMap="genreMap">
   	  select genre, cnt from
	  (select genre, cnt, rownum as RNO
	  from
	  (select genre, cnt
	  from (select genre, count(*) as cnt
	  from ( WITH TT AS
	       ( SELECT #{genre} genre FROM DUAL )
	       SELECT TRIM(REGEXP_SUBSTR(genre, '[^,]+', 1, LEVEL)) AS genre
	       FROM TT CONNECT BY INSTR(genre, ',', 1, LEVEL - 1) <![CDATA[>]]> 0
	  ) V
	  group by genre) X
	  order by cnt desc ) Y
	  ) Z
   </select>
   
   <!-- word cloud 개인 선호 태그 select -->
   <select id="myfavorTag" parameterType="String" resultType="String">
   		select favortag
		from wishlist
		where fk_idx=#{idx}
   </select>
   
   <!-- 하트 눌렀을 때 가고싶어요 select -->
   <resultMap type="HashMap" id="WishMap">
   		<result property="exhibitionno" 	column="exhibitionno" 		javaType="String"/>
	 	<result property="exhibitionname" 	column="exhibitionname" 	javaType="String"/>
	 	<result property="startdate" 		column="startdate" 			javaType="String"/>
	 	<result property="enddate" 			column="enddate" 			javaType="String"/>
	 	<result property="status" 			column="status" 			javaType="String"/>
	 	<result property="mainposter" 		column="mainposter" 		javaType="String"/>
	 	<result property="galleryname" 		column="galleryname" 		javaType="String"/>
   </resultMap>
   
   <select id="selectWannaGo" parameterType="String" resultMap="WishMap">
   		select 
		    V.exhibitionno, V.exhibitionname, V.startdate, V.enddate, V.status,
		    D.mainposter, 
		    G.galleryname  
		from 
		    (
		    select E.exhibitionno, E.fk_galleryno, E.exhibitionname, E.startdate, E.enddate, E.status
		    from wishlist W join exhibition E
		    on W.fk_exhibitionno = E.exhibitionno
		    where fk_idx=#{idx} and E.status='전시중'
		    ) V inner join 
		    exhibitiondetail D on V.exhibitionno = D.fk_exhibitionno left outer join 
		    gallery G on V.fk_galleryno = G.galleryno
		order by 1 asc
   </select>
   
   <!-- 책갈피 눌렀을 때 다녀왔어요 select -->
   <resultMap type="HashMap" id="goMap">
   		<result property="exhibitionno" 	column="exhibitionno" 		javaType="String"/>
	 	<result property="exhibitionname" 	column="exhibitionname" 	javaType="String"/>
	 	<result property="startdate" 		column="startdate" 			javaType="String"/>
	 	<result property="enddate" 			column="enddate" 			javaType="String"/>
	 	<result property="status" 			column="status" 			javaType="String"/>
	 	<result property="mainposter" 		column="mainposter" 		javaType="String"/>
	 	<result property="galleryname" 		column="galleryname" 		javaType="String"/>
   </resultMap>
   
   <select id="selectGo" parameterType="String" resultMap="goMap">
   		select 
		    V.exhibitionno, V.exhibitionname, V.startdate, V.enddate, V.status,
		    D.mainposter, 
		    G.galleryname  
		from 
		    (
		    select E.exhibitionno, E.fk_galleryno, E.exhibitionname, E.startdate, E.enddate, E.status
		    from 
		        (select distinct R.fk_idx, D.fk_exhibitionno
		         from reser R join reserdetail D
		         on R.reserno = D.fk_reserno
		         where fk_idx = #{idx}) W join exhibition E on W.fk_exhibitionno = E.exhibitionno
		    ) V inner join 
		    exhibitiondetail D on V.exhibitionno = D.fk_exhibitionno left outer join 
		    gallery G on V.fk_galleryno = G.galleryno
		order by 1 asc
   </select>
   
   <!-- 선호 작가 select -->
   <resultMap type="HashMap" id="authorMap">
   		<result property="exhibitionno" 	column="exhibitionno" 	javaType="String"/>
	 	<result property="author" 			column="author" 		javaType="String"/>
	 	<result property="image1" 			column="image1" 		javaType="String"/>
   </resultMap>
   <select id="selectFavorAuthor" parameterType="String" resultMap="authorMap">
   		select exhibitionno, author, image1
		from
		(
		select ROW_NUMBER() OVER(ORDER BY wishno) as num, wishno, exhibitionno, author
		from wishList W join exhibition E 
		on W.fk_exhibitionno = E.exhibitionno
		where W.fk_idx = #{idx} order by 1 desc) T join exhibitiondetail D
		on T.exhibitionno = D.fk_exhibitionno
		where <![CDATA[num > 2]]>
   </select>
   
   <!-- 선호 전시관 -->
   <resultMap type="HashMap" id="galMap">
   		<result property="galleryno" 		column="galleryno" 		javaType="String"/>
	 	<result property="galleryname" 		column="galleryname" 	javaType="String"/>
	 	<result property="detailaddress" 	column="detailaddress" 	javaType="String"/>
	 	<result property="mainpicture" 		column="mainpicture" 	javaType="String"/>
   </resultMap>
   <select id="selectfavorGal" parameterType="String" resultMap="galMap">
   		select galleryno, galleryname, detailaddress, mainpicture
		from
		(select fk_galleryno
		from galwishList
		where fk_idx=#{idx}) W join gallery G
		on W.fk_galleryno = G.galleryno
   </select>
   
   <!-- 마이페이지 - 작품 재설정 -->
   <update id="updateFavor1" parameterType="HashMap">
		update wishlist set fk_galleryno=#{galleryno1}, fk_exhibitionno=#{exhibitionno1}, 
		favortag=(select tag from exhibition where exhibitionno=#{exhibitionno1}), 
		favorgenre=(select genre from exhibition where exhibitionno=#{exhibitionno1})
		where wishno=(select wishno
					  from
					  (select rownum AS rno, wishno
					  from wishlist
					  where fk_idx=#{idx}
					  ) V
					  where rno = 1)
   </update>
   <update id="updateFavor2" parameterType="HashMap">
		update wishlist set fk_galleryno=#{galleryno2}, fk_exhibitionno=#{exhibitionno2}, 
		favortag=(select tag from exhibition where exhibitionno=#{exhibitionno2}), 
		favorgenre=(select genre from exhibition where exhibitionno=#{exhibitionno2})
		where wishno=(select wishno
					  from
					  (select rownum AS rno, wishno
					  from wishlist
					  where fk_idx=#{idx}
					  ) V
					  where rno = 2)
   </update>

	<!-- 닉네임 변경 -->
	<update id="changeName" parameterType="HashMap">
		update member set name=#{name} where idx=#{idx}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="changePwd" parameterType="HashMap">
		update member set password=#{password} where idx=#{idx}
	</update>
	
	<!-- 회원탈퇴 -->
	<!-- 탈퇴 사유 입력 -->
	<update id="updateWithdrawal" parameterType="HashMap">
		update member set withdrawal=#{withdrawal} where idx=#{idx}
	</update>
	<!-- status 0 으로 변경 -->
	<update id="updateStatus" parameterType="String">
		update member set status=0 where idx=#{idx}
	</update>
	
	<!-- ************** 관리자 페이지 ************** -->
   <!-- 지역마다 선호한 장르 다 가져온다. -->
   <select id="getAreaFavorGenre" parameterType="String" resultType="String">
	    select favorgenre
		from (select idx, area
		      from member) M join wishlist W
		on M.idx = W.fk_idx
		where area = #{area}
   </select>
   
   <!-- 지역별 선호장르 카운트 총 합 -->
   <select id="getTotalCnt" parameterType="String" resultType="int">
   		select sum(cnt)
	   		from
	   		(
	   		select genre, cnt from
		    (select genre, cnt, rownum as RNO
		    from
		    (select genre, cnt
		    from (select genre, count(*) as cnt
		    from ( WITH TT AS
		         ( SELECT #{genre} genre FROM DUAL )
		         SELECT TRIM(REGEXP_SUBSTR(genre, '[^,]+', 1, LEVEL)) AS genre
		         FROM TT CONNECT BY INSTR(genre, ',', 1, LEVEL - 1) <![CDATA[>]]> 0
		    ) V
		    group by genre) X
		    order by cnt desc ) Y
		    ) Z
		    )
   </select>
   

</mapper>